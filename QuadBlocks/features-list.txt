+ Movement
    + Basic
    + Hold-to-drag

+ Rotation

+ Collision detection
    + walls
    + floor
    + garbage

+ Wall kicks

+ T-spins
    + detection
    + scoring

+ Gravity
    + Basic (static)
    + Basic (increasing with level)
    + Hard drop
    + Soft drop

+ Piece Locking

+ Line Clears

+ Next pieces

+ Hold piece

+ Ghost piece

+ Fix depth clamping

+ Fix framerate (30 fps)
    + Account for scheduler overhead

+ Fix random pieces

+ UI
    + score display
    + lines remaining
    + current level

+ Keyboard support
    + Fix bug: for some reason putting the std::map<int, Keyboard::Key*> Keys inside of keyboard.cpp or keyboard.h was causing EXC_BAD_ACCESS. Had to put it into main, before the Keyboard declaration to fix the issue. Need to investigate more...
      (static initialization order fiasco)

+ More obvious pre-lock piece graphic. Too easy to confuse an unlocked/locked piece

+ Extra lines cleared for more than single

+ Scoring
    + single, double, triple, quad
    + back-to-back
    + t-spins, plus t-spin single, double, triple
    + combo
    + bravo / perfect / all-clear
    + score display
    + lines remaining
    + level
    + move-type message (single, double, t-spin, all-clear, etc.)

+ Better controls

+ Top-outs

+ Rename project from Tetris to QuadBlocks

- Fix bug: T-spins are happening against walls when they shouldn't

- Precise specifications
    - Infinity limit: 8 rotations or 10 movements
    - loss condition: blocked at entry, or locks partially out of bounds
    - authentic piece entry
    + max gravity: 2.5G
    + max level: 15
    + lock delay: 0.5 seconds (or 15 frames?)
    + Infinity: reset lock delay on move/rotate
    + soft drop speed (native * 10) or 0.5 G, whichever is greater (<= MAX)
    + gravity increase rate:
        level   G/256    G
            1   4      0.016
            2   8      0.032
            3   16     0.063
            4   24     0.094
            5   32     0.125
            6   48     0.1875
            7   64     0.25
            8   96     0.375
            9   128    0.5
           10   192    0.75
           11   256    1
           12   320    1.25
           13   384    1.5
           14   512    2
           15   640    2.5

- Sound Effects
    - Soft drop
    - Scoring actions
       - Quad (formerly Tetris)
       + All Clear
       + Triple
       + Double
       + Single
    - Music
       - Change to free music?
       - Get permission to use Worlds music?
    - Game timer
    + Movement
    + Rotation
    + Hard drop
    + Line clear
    X Hold
    X Wall-kicks, floor-kicks

- Menu
    - QuadBlocks logo / "paused"
    - Sound settings
    - Customizable controls
    - High Scores
    + Toggle "Dev Mode" (bottomless hold)
    + Handle user's selection
    + Basic overlay
    X Hierarchical menus
    X Mode Select
    X Dev settings

- Self-contained, distributable application package
    
- Modes
    - Marathon
    - Timed 2 min, reset on level-up
    - Line limit / Sprint / Race / Time Attack
    - Cascade
    X (Square)
    X (Hot-Line)
    X (Fusion)
    X (Sticky)
    X "Create" Mode, where you can select your piece
    X Juice Mode: ridiculous powerups and powerdowns
    X Gravity Mode: Gravity increases with each piece, but line clears or score bonuses may help lower gravity

- Juice it up
    + Sound effects
    + Music
    - Motion blur
    - Bounces
    - Tweens
    - Animated on-deck pieces
    - High Scores
    - Backgrounds
        - Static
        X Animated
    X Explosions
    X Smoke
    X Have something trigger a flip by 180 degrees (any direction: X, Y, Z)
    X All the pieces turn to gold (a la Star Power), and you get bonus points

- Fix UI bug: Awesomium's ~WebConfig() destructor causes EXC_BAD_ACCESS (on perigee), so we 'new' the WebConfig but never 'delete' it in UI::UI().

X Fix UI bug: the bounding box of each opaque character on a transparent background is itself opaque. (works just fine in Chrome, but not Awesomium)

X App-store hosting

X Powerups
    - A special piece in the queue
    - A random block starts flashing
    - An outline describes a placement location for a piece in the queue
